var N=(I)=>{const U=I.split("\r\n"),Y=U[0],K=/^HTTP\/(\d+\.\d+)\s+(\d+)\s+(.*)$/,D=Y.match(K),j=D?{http:D[1],status:parseInt(D[2],10),message:D[3].trim()}:{};return{...U.slice(1).filter((Z)=>Z.trim()!=="").reduce((Z,G)=>{const X=G.indexOf(":");if(X!==-1){const V=G.slice(0,X).trim().toLowerCase(),A=G.slice(X+1).trim();return{...Z,[V]:A}}return Z},{}),...j}};var E=(I,U)=>{const Y=U?.skipContent||!1,K=U?.readBufferSize||512n+256n;let D="",j=0n,$=!1;return{[Symbol.asyncIterator](){return{async next(){if($)return{done:!0,value:void 0};let Z=void 0,G,X={},V={recordWarcOffset:0n,recordResponseOffset:0n,recordContentOffset:0n};try{do{let A=D,q=[];V.recordWarcOffset=j-BigInt(A.length);while(q.length<2){const Q=A.split("\r\n\r\n");if(q=Q.length>1?Q:q,q.length<2){const _=await I(j,K);A+=_.toString(),j+=K}}G=N(q[0]);const F=G["content-length"]?BigInt(G["content-length"]):0n;if(G["warc-type"]!=="response"||F===0n){const Q=F-BigInt(A.length-q[0].length-4);j+=Q>0n?Q:0n,D=Q<0n?A.slice(A.length+Number(Q)+4):""}else{while(q.length<3){const J=A.split("\r\n\r\n");if(q=J.length>2?J:q,q.length<3){const R=await I(j,K);A+=R.toString(),j+=K}}X=N(q[1]);const Q=F-BigInt(q[1].length),_=Q-BigInt(A.length-q[0].length-q[1].length-8);Z=Y?void 0:Buffer.from(A.slice(q[0].length+q[1].length+8,q[0].length+q[1].length+8+Number(Q))+(_>0n?(await I(j,_)).toString():"")),j+=_>0n?_:0n,D=_<0n?A.slice(A.length+Number(_)+4):"",V.recordResponseOffset=V.recordWarcOffset+BigInt(q[0].length+4),V.recordContentOffset=V.recordResponseOffset+BigInt(q[1].length+4),X["content-length"]=Q}}while(G&&G["warc-type"]!=="response");if(!G)return $=!0,{done:!0,value:void 0};return{done:!1,value:[G,X,V,Z]}}catch(A){if(A instanceof RangeError)return $=!0,{done:!0,value:void 0};else throw A}}}}}};var M=(I)=>(U,Y)=>{const K=Number(U),D=Number(U+Y);if(K<0||D>I.size)return Promise.reject(new Error("Invalid range"));return I.slice(K,D).text()};self.onmessage=async(I)=>{const{action:U}=I.data;switch(U){case"parse":const{file:Y}=I.data;for await(let K of E(M(Y),{skipContent:!0})){const[D,j,$,Z]=K,G=j["content-length"]&&!isNaN(Number(j["content-length"]))?BigInt(j["content-length"]):0n,X=BigInt($.recordContentOffset),V={uri:D["warc-target-uri"]?.replace(/<|>/g,""),status:j.status,ip:D["warc-ip-address"],size:G,offset:X,date:new Date(D["warc-date"]),location:j.location??j.Location,contentType:j["content-type"],file:Y,"transfer-encoding":j["transfer-encoding"]};self.postMessage({action:"record",record:V})}break;default:break}};
